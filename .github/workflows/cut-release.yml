name: Release MgElectron
permissions:
  # needed for publishing artifacts
  contents: write

on:
  # Allow the workflow to be run manually.
  workflow_dispatch:
    inputs:
      electron-version:
        type: string
        required: true
      mighty-patch:
        type: string
        required: true
      skip-sentry:
        required: false
        type: boolean
        default: false
  # No automations yet!!
  # ðŸš¨ Be very careful with these, as this is a public repo.
  #    See: https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#self-hosted-runner-security

# Jobs should use the following dist-cache-key formats:
# - when downloading the zip (win32, linux):
#   - `dist-${{ inputs.electron-version }}-${{ matrix.platform-arch }}`
# - when building the zip (darwin):
#   - `dist-${{ inputs.electron-version }}-mighty.${{ inputs.mighty-patch }}-${{ matrix.platform-arch }}`

jobs:
  # TODO - implement this
  # find-or-create-release:
  #   name: Find or create mightyapp/electron release
  #   steps:
  #     - name: Make and push a commit, iff needed
  #     - name: Find or create release

  # todo - skip iff release existed
  load-or-build-artifacts:
    name: Load or build Electron artifacts for supported platforms
    # TODO - re-enable this
    # needs: find-or-create-release
    strategy:
      matrix:
        include:
          - platform-arch: win32-x64
            is-custom-build: false
            runner: ubuntu-18.04
          - platform-arch: linux-x64
            is-custom-build: false
            runner: ubuntu-18.04
          - platform-arch: darwin-x64
            is-custom-build: true
            runner: [self-hosted, macOS, X64]
          - platform-arch: darwin-arm64
            is-custom-build: true
            runner: [self-hosted, macOS, ARM64]
    runs-on: ${{ matrix.runner }}
    env:
      version-string: ${{ inputs.electron-version }}-${{ matrix.platform-arch }}
    steps:
      - name: Setup cache for built output (dist)
        id: dist-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/src/out/Release/dist.zip
          key: dist-${{ inputs.electron-version }}-${{ matrix.is-custom-build && 'mighty.${{ inputs.mighty-patch }}-'}}${{ matrix.platform-arch }}
      - name: Download upstream dist (non-custom builds)
        # iff we ARE NOT building on a self-hosted machine && did not hit cache
        if: ${{ !matrix.is-custom-build && steps.dist-cache.outputs.cache-hit != 'true' }}
        run: |
          curl -L -o "${{ github.workspace }}/src/out/Release/dist.zip" --create-dirs https://github.com/electron/electron/releases/download/v${{ inputs.electron-version }}/electron-v${{ env.version-string }}.zip
      - name: Prepare our build env (custom builds only)
        if: ${{ matrix.is-custom-build }}
        uses: mightyapp/electron/.github/actions/prepare-build-env@aidan/rebase-15-x-y
        with:
          is-self-hosted: true
      - name: Build our own dist (custom builds only)
        # iff we ARE building on a self-hosted machine && did not hit cache
        if: ${{ !matrix.is-custom-build && steps.dist-cache.outputs.cache-hit != 'true' }}
        uses: mightyapp/electron/.github/actions/build@aidan/rebase-15-x-y
        with:
          platform-arch: ${{ matrix.platform-arch }}
          sentry-token: ${{ secrets.SENTRY_TOKEN }}
      - name: Publish artifact to release for ${{ matrix.platform-arch }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/src/out/Release/dist.zip
          asset_name: electron-v${{ env.version-string }}.zip
          tag: v${{ inputs.electron-version }}-mighty.${{ inputs.mighty-patch }}
          overwrite: true

  # n.b. We published each build's artifacts alongside the build step
  # so we can more easily deal with matrices.
  release:
    name: Finalize mightyapp/electron release
    needs: load-or-build-artifacts
    runs-on: ubuntu-18.04
    steps:
      - name: Fetch win32-x64 cached output
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/electron-v${{ inputs.electron-version }}-win32-x64.zip
          # keep in sync with TKTK
          key: dist-${{ inputs.electron-version }}-win32-x64
      - name: Fetch linux-x64 cached output
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/electron-v${{ inputs.electron-version }}-linux-x64.zip
          # keep in sync with TKTK
          key: dist-${{ inputs.electron-version }}-linux-x64
      - name: Fetch darwin-x64 cached output
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/electron-v${{ inputs.electron-version }}-darwin-x64.zip
          # keep in sync with TKTK
          key: dist-${{ inputs.electron-version }}-mighty.${{ inputs.mighty-patch }}-darwin-x64
      - name: Fetch darwin-arm64 cached output
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/electron-v${{ inputs.electron-version }}-darwin-arm64.zip
          key: dist-${{ inputs.electron-version }}-mighty.${{ inputs.mighty-patch }}-darwin-arm64
      # TODO - do we need to check for cache misses and otherwise download artifacts here?
      #        i'm guessing not, since we depend on `load-or-build` which manages cache
      - name: Update checksums
        run: |
          shasum -a 256 electron-v*.zip | sed 's/  / */g' > ${{ github.workspace }}/SHASUMS256.txt
      - name: Publish CHECKSUMS file
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/SHASUMS256.txt
          asset_name: SHASUMS256.txt
          tag: v${{ inputs.electron-version }}-mighty.${{ inputs.mighty-patch }}
          overwrite: true
