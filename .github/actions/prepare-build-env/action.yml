name: Prepare Electron build environment

runs:
  using: 'composite'
  steps:
    # Prepare env
    ## Setup languages
    - name: Setup Node.js ${{ env.node-version }} (GH-hosted)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.node-version }}
    - name: Setup Python3
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.python-version }}

    ## Setup build deps
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: 'zsh -e {0}'
      run: |
        echo "npm-cache-dir=$(npm config get cache)" >> $GITHUB_ENV
    - name: Setup npm cache
      uses: actions/cache@v3
      id: cache-npm
      with:
        path: ${{ env.npm-cache-dir }}
        key: ${{ runner.os }}-${{ runner.arch }}-npm
    - name: Install electron-build-tools
      shell: 'zsh -e {0}'
      run: npm i -g @electron/build-tools

    # TODO - also set up goma in here? self-hosted ftw
    - name: Init working directory
      shell: 'zsh -e {0}'
      run: |
        e init -r ${{ github.workspace }}/workspace -i release --fork mightyapp/electron release
        jq '.remotes.electron.origin = .remotes.electron.fork|del(.remotes.electron.fork)|.gen.args[.gen.args|length] |= "symbol_level = 1"|.gen.args[.gen.args|length] |= "blink_symbol_level = 1"' \
          ~/.electron_build_tools/configs/evm.release.json > ~/.electron_build_tools/configs/evm.release.json.tmp
        mv ~/.electron_build_tools/configs/evm.release.json.tmp ~/.electron_build_tools/configs/evm.release.json
        sed -i.bak 's/electron\/electron/mightyapp\/electron/' ${{ github.workspace }}/workspace/.gclient
        rm ${{ github.workspace }}/workspace/.gclient.bak
        mkdir -p ${{ github.workspace }}/workspace/src
